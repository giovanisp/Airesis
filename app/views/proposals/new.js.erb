<%if params[:models] %>
var container_ = $('.reveal-modal:visible');
<%else%>
var container_ = $('<div class="reveal-modal large" data-reveal  data-options="close_on_esc: false;close_on_background_click: false;"></div>');
$('body').append(container_);
<%end%>
<%if params[:proposal_type_id] == ProposalType::PETITION %>
container_.html('<%=j render "proposal_types/petition"%>');
<%else %>
container_.html('<%=j render "proposal_types/form"%>');
<%end%>

<%unless params[:models] %>
airesis_reveal(container_);
<%end%>

var form = $('#new_proposal');

form.steps({
  headerTag: ".legend",
  bodyTag: ".step",
  autoFocus: true,
  labels: {
    previous: '<i class="fa fa-arrow-left"></i>' + Airesis.i18n.buttons.goBack,
    next: Airesis.i18n.buttons.next + '<i class="fa fa-arrow-right"></i>'
  },
  onStepChanging: function (e, currentIndex, newIndex) {
    var fv = form.data('formValidation'),
        $container = form.find('.step.current');

    fv.validateContainer($container);

    var isValidStep = fv.isValidContainer($container);
    return !(isValidStep === false || isValidStep === null);
  },
  onStepChanged: function (event, currentIndex, priorIndex) {
    if (currentIndex === 2) {
      if (priorIndex === 1) {
        $.ajax({
          url: '<%=similar_proposals_path group_id: params[:group_id]%>',
          dataType: 'script',
          data: {
            tags: $('#proposal_tags_list').val()
          }
        });
      }
      else {
        if (priorIndex === 3 && ProposalsNew.skippedSuggestionStep) {
          console.log('skip');
          form.steps('previous');
        }
      }
    }
    if (currentIndex === 3) {
      var id = 'proposal_sections_attributes_0_paragraphs_attributes_0_content';
      if (CKEDITOR.instances[id] === undefined) {
        CKEDITOR.replace(id, {
          'toolbar': 'proposal',
          'language': Airesis.i18n.locale
        })
      }
    }
    if (priorIndex === 3) {
      var id = 'proposal_sections_attributes_0_paragraphs_attributes_0_content';
      $('#'+id).val(CKEDITOR.instances[id].getData());
    }
  },
  onFinishing: function (e, currentIndex) {
    var fv = form.data('formValidation'),
        $container = form.find('.step.current');

    fv.validateContainer($container);

    var isValidStep = fv.isValidContainer($container);
    return !(isValidStep === false || isValidStep === null);
  },
  onFinished: function (e, currentIndex) {
    form.formValidation('defaultSubmit');
  },
  onInit: function (e, currentIndex) {
    form.find('[role="menuitem"]').addClass('btn').addClass('blue')
  }
});
new AiresisFormValidation(form);
