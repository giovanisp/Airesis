<h2><%= @page_title %></h2>
<% if ['edit', 'update'].include? params[:action] %>
    <div class='panel callout'><p><%= t('pages.groups.edit_quorums.edit_quorum_warning') %></p></div>
<% end %>

<%= simple_form_for !in_subdomain? ? [@group, @quorum] : @quorum, validate: true, remote: request.xhr? do |e| %>
    <div class="row">
      <div class="columns small-12">
        <%= e.input :name %>
      </div>
      <div class="columns small-12">
        <%= e.input :description, as: :text, rows: 2, style: "width:100%", class: "elastic" %>
      </div>
    </div>
    <div class="row">
      <div class="columns large-6">
        <fieldset>
          <legend><%= 'Debate' %></legend>
          <p>
            <%= e.label :minutes %>
            <%= e.text_field(:days_m, class: "days", readonly: true)+(t 'activerecord.attributes.quorum.days_m') %>
            <%= e.text_field(:hours_m, class: "hours", readonly: true)+(t 'activerecord.attributes.quorum.hours_m') %>
            <%= e.text_field(:minutes_m, class: "minutes", readonly: true)+(t 'activerecord.attributes.quorum.minutes_m') %>
          </p>

          <p>
            <%= e.label :percentage %>
            <%= raw t('pages.groups.edit_quorums.new_quorum.advanced_participation_description',
                      participants_percentage: (e.text_field :percentage, class: "percentage participants", title: t('activerecord.attributes.quorum.percentage_title'), readonly: true),
                      current_number: "<span id=\"participants_number\">1</span>", total_number: @group_participations_count, average: (@group.statistic.valutations*100 / @group.scoped_participants(GroupAction::PROPOSAL_PARTICIPATION).count).round(2)) %>
          </p>

          <p>
            <%= e.label :good_score %>
            <%= e.text_field :good_score, class: "percentage", validate: false, title: t('activerecord.attributes.quorum.good_score_title'), readonly: true %>
            %
            <b><%= "(average value: #{@group.statistic.good_score.round(2)}%)" %></b>
          </p>

          <%= e.hidden_field :t_percentage, value: 's' %>
          <%= e.hidden_field :t_minutes, value: 's' %>
          <%= e.hidden_field :t_good_score, value: 's' %>

        </fieldset>
      </div>
      <div class="columns large-6">
        <fieldset>
          <legend><%= 'Votation' %></legend>
          <p style="display:none">
            <%= e.label :vote_minutes %>
            <%#= e.text_field(:vote_days_m, class: "days", readonly: true)+(t 'activerecord.attributes.quorum.days_m') %>
            <%#= e.text_field(:vote_hours_m, class: "hours", readonly: true)+(t 'activerecord.attributes.quorum.hours_m') %>
            <%#= e.text_field(:vote_minutes_m, class: "minutes", readonly: true)+(t 'activerecord.attributes.quorum.minutes_m') %>
            <%= 'free' %>
          </p>

          <p>
            <%= e.label :vote_percentage %>
            <%= raw t('pages.groups.edit_quorums.new_quorum.advanced_participation_description',
                      participants_percentage: (e.text_field :vote_percentage, class: "percentage vote_participants", title: t('activerecord.attributes.quorum.percentage_title'), readonly: true),
                      current_number: "<span id=\"vote_participants_number\">1</span>", total_number: @vote_participants_count, average: (@group.statistic.vote_valutations*100 / @group.scoped_participants(GroupAction::PROPOSAL_VOTE).count).round(2)) %>
          </p>

          <p>
            <%= e.label :vote_good_score %>
            <%= e.text_field :vote_good_score, class: "percentage", validate: false, title: t('activerecord.attributes.quorum.good_score_title'), readonly: true %>
            %
          </p>

          <%= e.hidden_field :t_vote_percentage, value: 's' %>
          <%= e.hidden_field :t_vote_minutes, value: 'f' %>
          <%= e.hidden_field :t_vote_good_score, value: 's' %>
        </fieldset>
      </div>
    </div>
    <div class="row">
      <div class="columns large-12">
        <%= link_to t('buttons.cancel'), '#', class: 'btn', data: {'reveal-close' => ''} %>
        <%= link_to t('buttons.go_back'), :back, class: 'btn', data: {back: ''} %>
        <%= e.button :button, class: 'btn blue' do %>
            <i class="fa fa-save"></i>
            <%= button_name %>
        <% end %>
      </div>
    </div>
<% end %>
<a class="close-reveal-modal">&#215;</a>
<script type="text/javascript">

    function closeMe() {
        $('#quorum_container').foundation('reveal', 'close');
    }
    $(function () {
        $("#new_best_quorum").validate();
        $('.advanced').hide();

        function update_participants(value) {
            $('#participants_number').html(Math.min(Math.floor(parseFloat(value) * 0.01 * parseFloat(<%=@group_participations_count%>)) + 1, <%=@group_participations_count%>));
        }

        function update_vote_participants(value) {
            $('#vote_participants_number').html(Math.min(Math.floor(parseFloat(value) * 0.01 * parseFloat(<%=@vote_participants_count%>)) + 1, <%=@vote_participants_count%>));
        }

        $(".participants").spinner({
            incremental: true,
            max: 100,
            min: 0,
            spin: function (event, ui) {
                update_participants(ui.value);
            }
        });

        $(".vote_participants").spinner({
            incremental: true,
            max: 100,
            min: 0,
            spin: function (event, ui) {
                update_vote_participants(ui.value);
            }
        });

        update_participants(<%=@quorum.percentage%>);
        update_vote_participants(<%=@quorum.vote_percentage%>);

        $('#best_quorum_good_score').spinner({
            incremental: true,
            max: 100,
            min: 0,
            spin: function (event, ui) {
                var good = ui.value;
                var bad = parseInt($('#quorum_bad_score').val());
                if (good < bad) {
                    $('#quorum_bad_score').val(good);
                }
            }
        });

        $('#best_quorum_vote_good_score').spinner({
            incremental: true,
            max: 100,
            min: 0,
            spin: function (event, ui) {
                var good = parseInt($('#quorum_good_score').val());
                var bad = ui.value;
                if (bad >= good) {
                    $('#quorum_good_score').val(bad);
                }
            }
        });

        $(".hours").spinner({
            incremental: true,
            max: 23,
            min: 0
        });
        $(".days").spinner({
            incremental: true,
            min: 0
        });
        $(".minutes").spinner({
            incremental: true,
            max: 55,
            min: 0,
            step: 5
        });

        $("#radio").buttonset();
        $(".elastic").elastic();
    });
</script>
